from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from ..db import AsyncSessionLocal
from ..services import get_or_create_user, set_user_nickname
from ..states import RegistrationSG
from ..keyboards import main_menu_kb

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    async with AsyncSessionLocal() as session:
        user = await get_or_create_user(session, message.from_user.id, message.from_user.username)
        if not user.nickname:
            await state.set_state(RegistrationSG.waiting_nickname)
            await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã\n–í–≤–µ–¥–∏ –∏–º—è –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º, –∫–æ—Ç–æ—Ä—ã–π —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
            return
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user.nickname or '–¥—Ä—É–≥'}! üëã\n–ß—Ç–æ –¥–µ–ª–∞–µ–º?", reply_markup=main_menu_kb())

@router.message(RegistrationSG.waiting_nickname)
async def set_nick(message: Message, state: FSMContext):
    nickname = (message.text or "").strip()
    if not nickname or len(nickname) > 50:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∏–º—è/–Ω–∏–∫–Ω–µ–π–º –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    async with AsyncSessionLocal() as session:
        user = await get_or_create_user(session, message.from_user.id, message.from_user.username)
        await set_user_nickname(session, user, nickname)
    await state.clear()
    await message.answer(f"–û—Ç–ª–∏—á–Ω–æ, {nickname}! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –±–∞–Ω–∫—Ä–æ–ª–ª üí∞\n–ß—Ç–æ –¥–µ–ª–∞–µ–º?", reply_markup=main_menu_kb())
